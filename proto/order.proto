syntax = "proto3";

package order;

option go_package = "github.com/yourusername/ADV3/proto/order";

// Order Service definition
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {}
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {}
  rpc ProcessPayment(PaymentRequest) returns (PaymentResponse) {}
}

// Order related messages
message OrderItem {
  string product_id = 1;
  int32 quantity = 2;
  double price = 3;
}

message Order {
  string id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
  double total_amount = 4;
  string status = 5;
  string created_at = 6;
  string updated_at = 7;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated OrderItem items = 2;
}

message CreateOrderResponse {
  Order order = 1;
  string error = 2;
}

message GetOrderRequest {
  string order_id = 1;
}

message GetOrderResponse {
  Order order = 1;
  string error = 2;
}

message ListOrdersRequest {
  string user_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
  string error = 3;
}

// Payment related messages
message PaymentRequest {
  string order_id = 1;
  double amount = 2;
  string payment_method = 3;
  string card_number = 4;
  string card_holder = 5;
  string expiry_date = 6;
  string cvv = 7;
}

message PaymentResponse {
  string payment_id = 1;
  string status = 2;
  string error = 3;
} 